1. 자바스크립트

  사용자와 상호작용하는 동작을 통제하는 역할을 한다.

  - 자바스크립트의 구성
   브라우저 
  - 자바스크립트를 해석해 주는 역
  - 자바스크립트 런타임
  - 자바스크립트 코어 (ECMAScript)
  - 브라우저 객체 모델
  ㄴ 브라우저에서만 제공되는 기능 모음

  - Node.js 
  - 자바스크립트를 해석해주는 역할(서버 쪽에서 해석)
  - 자바스크립트 런타임
  - 자바스크립트 코어(ECMAScript)
  - Node.js 내장 모듈

2. 실습환경

  - 브라우저 콘솔
  option + command + I (개발자모드)
  console > 변수의 값 , 객체의 값
  console.log > 단순 메세지, 값 출력
  console.dir > 갹체를 구조화 하여 확인 할때
  consile.error > 에러 형태로 값을 출력

  - Node.js 콘솔 또는 파일 실행

  - HTML 웹페이지를 만들어 실행 (이벤트, HTML을 다루는 기능)
  <script> 자바스크립트 코드 </script>
  <script src="외부 자바스크립트 파일"></script>

3. 자바스크립트 주석

  -소스를 숨김처리, 실행을 중단
  -소스에 대한 설명
  ㄴ 1) 줄 주석 > // ~ 
     2) 여러 줄 주석 > /* ~ */

4. 변수(variable)


  - 변경 할 수 있는 값을 담는 공간
  - 값을 기억하기 위한 공간 > 메모리
  - 변수라고 알려주기 위한 방법
  - var 선언자를 붙여 주면 변수가 된다 
  ㄴ ex) var a -> 변수 a 이고 a 라는 저장 공간
  ㄴ 프로그래밍에서 "=" 는 값을 대입한다 (오른쪽에 있는 값을 a 라는 공간에 저장한다)

  - var a = 1;
    a 라는 변수를 선언하고 1 이라는 값을 변수에 저장한다
    (초기화 - 선언과 동시에 값을 대입)

    var a; -> 선언 
    a = 1; 대입 
    working -> 먼저 var a = undefined; 대입됌. (undefined가 기본값이기 때문에)
               이후 a = 1; a 는 1 이라는 값을 대입하여 var a = 1; 이 됀다.

    변수를 여러개 선언 

    var a,b,c;
    var a = 1, b = 2, c = 3;

    변수의 명명 규칙

    1) 사용할 수 있는 문자
      a. 알파벳 (대문자,소문자)
      b. 숫자 (0~9)
      c. 밑줄(_)
      d. 달러 기호 ($)

    2) 숫자는 변수의 첫번째 문자로 올 수 없다.

    3) 예약어는 쓸 수 없다.
      자바스크립트 내에서 이미 기능적으로 사용되는 키워드
      ㄴ ex) for, new, while ...typeof, ...instance

    변수에 저장할 수 있는 자료형 

    1) 원시 타입
      - 숫자
      - 문자("string")
      - 논리값 (true, false)

       var a = true;
       typeof a = boolean 
       boolean = 논리값 

       false로 인식 하는 경우
       -
      - null -> 값이 없는 상태
      - undefined -> 값이 정의되어 있지 않은 상태 (변수를 선언만 한 상태)

      - typeof = 자료형을 체크하는 연산자 
       ex) typeof = a -> "undefined", "string"(숫자) , boolean(논리값)

    2) 객체

      자바스크립트 - 원시타입 + 객체

      변수를 선언하면 window 하위 객체 속성으로 정의가 된다.

      브라우저 객체 모델 -> 최상위 객체 (window)

      새탭 -> 
      var a = 1; 선언시 
      이미 새탭에는 window 객체가 최상위에 있기때문에
      a = 1; 는 window 하위 객체 속성으로 정의된다.

      - console.log(a);
      var a = 1;

      -> window.a = undefined;
      -> console.log(a);
      -> a = 1; 
      의 순서로 적용된다
      



  * 참고
  1) 문장의 끝은 항상 ; (세미콜론) 으로 끝난다.    

5. 연산자

  1) 산술 연산자
  -사칙연산
  더하기(+)
  빼기(-)
  곱하기(*)
  나누기(/)
  나머지(%) -> 나머지를 구하는 연산자 ex) 5 % 3 -> 나머지는 2 

  2) 문자 결합 연산자
  "string" + "string"

  ex) var school1 = "연희"
      var text = school1 + "직업전문학교" 
      text = "연희직업전문학교" 

  3) 대입연산자(=)
  수학에서 = 는 ~와 같다 지만
  프로그래밍에서 = 는 대입 이다.

  ex) var a = 1;
      1 이라는 값을 a 라는 변수에 대입(저장)한다(오른쪽 값을 왼쪽에 대입(저장))
  
  4) 복합대입연산자
  산술 연산자 + 대입 연산자가 축약된 표현

  ex) var a = 1;
      var b = 2;
      a = a + b; ==== a += b; 
      a = a * b; ==== a *= b;
      a = a / b; ==== a /= b;
      a = a - b; ==== a -= b;
      a = a % b; ==== a %= b;

 5) 증감연산자
 증가, 감소와 관련된 연산자

 ex) 증가
     var a = 1;
     a = a + 1; // a = 2 ---> a++;
     a = a + 1; // a = 3 ---> a++;
     a = a + 1; // a = 4 ---> a++;

     감소 
     var a = 10;
     a = a - 1; // a = 9 ---> a--;
     a = a - 1; // a = 8 ---> a--;
     a = a - 1; // a = 7 ---> a--;


  ++a; -> var b = ++a;
        1) 연산 먼저 
        a = a + 1;
        2) 대입
        b = a;

  a++; -> var b = a++;
        1) 대입 먼저
        b = a;
        2) 연산
        a = a + 1; 

  ex) 2씩 증가 (복합 대입 연산자)
  a = a + 2; // a += 2;

  6) 비교 연산자
  두 값을 비교
  크다, 크거나 같다, 작다, 작거나 같다, 같다

  A > B,  A >= B, A < B, A <= B, == 

