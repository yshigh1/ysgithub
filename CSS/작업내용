stylesheet 

-적용 범위
  
  태그 > 클래스 > 아이디 > 태그의 style 속성으로 정의

-적용 취소 , 적용에 대한 설명 (주석)
  
  /* ~ */ 

-선택자(태그명으로 선택)
   ㅁㄴ

-CSS 적용 우선 순위 (적용 범위가 적을 수록 우선 순위가 높다)
  
  태그의 속성 Style > 아이디 > 클래스 선택자 > 태그 선택자

  *(모든태그)

  우선순위 강제 적용
  ㄴ !important -> 가급적 사용 x

-조상 자손 선택자
  
  왼쪽 -> 오른쪽 (왼쪽으로 갈수록 상위 태그)

-부모 자식 선택자
  
  바로 위 층위, 바로 아래 층위
  부모 > 자식

-그룹 선택자 (group.html)
  
  콤마(,)로 구분하여 여러 선택자를 적용

-가상 클래스 선택자 (decendant.html)
  
  <선택자: 상태값>
  요소의 상태로 선택 
  ex1) 체크박스, 라디오박스 -> 체크가 되었는지
        선택자: checked
  ex2) 요소에 마우스가 올려 있는 상태인지
        선택자: hover
  ex3) 요소가 읽기 전용 상태인지
        선택자: read-only
  ex4) 선택자가 아닌 상태인지
        선택자1에 선택자2가 포함이 되어 있지 않은 상태인가?
        ㄴ선택자1: not("선택자2")
  ex5) 첫번째 자식인지
        선택자: first-child
  ex6) 마지막 자식인지
        선택자: last-child    
  ex7) 몇 번째 자식인지
        선택자: nth-child
        다중 선택시에 사용할 수 있는 수식
        nth-child(2n) -> 2의 배수 2,4,6... (n은 1부터 시작)
        nth-child(2n+1) -> 3의 배수 1,3,5...(수식이 붙으므로 n은 0부터 시작)

-가상으로 추가하여 선택하는 선택자 (decendant.html)
  
  선택자: after 
          ㄴ선택자의 자손으로 가장 끝에 추가
  선택자: before
          ㄴ선택자의 자손으로 가장 앞에 추가

  선택자 참고 사이트
  ㄴ https://developer.mozilla.org/en-US/docs/Web/CSS/Reference

-결합자 (siblings.html)
 
 부모>자식

 형제

 인접형제(+)
  ㄴ선택자1+선택자2 -> 선택자1을 인접 형제(왼쪽위치)로 가진 선택자2를 선택
 일반형제(~)
  ㄴ선택자1~선택자2 -> 선택자1을 형제(왼쪽위치)로 가지고 있는 선택자2를 선택

-요소 속성 선택자
  
  속성명="속성값"

  ex) input[type="number"] {}

-선택자의 정리

  태그 선택자 - 태그명 (ex. ol ul li ..)
  클래스 선택자 - 클래스 속성으로 선택(.클래스명)
  아이디 선택자 - 아이디 속성으로 선택(#아이디명)
  조상 자손 선택자 - 왼쪽(조상)오른쪽(자손) (ex. ul -> li )
  부모 자식 선택자 - 왼쪽(부모)오른쪽(자손) (ex. 바로 층 위 ul > li 위에 ul이 있기때문에)
  그룹 선택자 - 동일한 스타일을 콤마(,)로 그룹지어 적용 (ul, ol{})
  속성 선택자 [속성명=속성값]

-결합자의 정리

  1.부모 자식 결합자 (>)
  2.인접 형제(+)
  3.일반 형제(~) 

-스타일 속성

  ex) 선택자 {
    background-color: red; width 100%;
    color: blue;
  }

  많이 사용하는 속성들
  1. 글꼴 속성
    font-size - 글자의 사이즈
    px - 고정 화소 기준 사이즈
    pt - 고정 사이즈
    
  2. 상대 사이즈
    em - 부모 기준 요소의 사이즈 기준의 사이즈
        ex) 부모 13px, 
            자식 1em -> 13px 
            자식 1.2em -> 15.6px
  
    rem - 최상위의 태그 기준 사이즈
        ex) html - 13px
            1rem - 13px
            1.2rem - 15.6px 

  3. 글자 색
    color: 1.색상명(red, blue, orange...)
           2.RGB(0~255, 0~255, 0~255)
            ㄴ ex) rgb(255,0,0) -> red
                   rgb(0,255,0) -> green
           3.hex코드(16진수)
             ㄴ rgb숫자 -> 16진수로 변경
                ex) rgb(255,0,0)
                       (ff,0,0)
                    #ff0000
  
  4. 텍스트 정렬
    text-align : left 
                 right 
                 center
                 justify 양쪽 정렬(자간 맞춤) 
  
  5. 행간
    line-height : px rem em .. 
  
    자간 , 단어별 자간
      letter-spacing : 
      word-spacing : 
  
  6 글자의 두께
     font-weight : 문자 - normal (기본값) , bold (두껍게)
                  숫자 - 100 ~ 900 (지원되는 형태에 따라 다름)
  
    글꼴
     font-family: 기본 글꼴, 대체 글꼴1, 대체 글꼴2;
                (기본 글꼴이 없는 경우 대체 글꼴로 적용)
     웹 폰트 (시스템에 없는 폰트)
     <link> 스타일 css 추가 방식
            ㄴ or @import css 링크 추가

  7. 공간
     Display 
     ㄴ block - 공간 (div)
              - 너비,높이
              - 상하좌우 여백(내부,외부)
              - padding 내부여백
              - margin 외부여백

     ㄴ inline - 글의 속성 (span)
               - 너비, 높이 x
               - 모든 방향(상하좌우) 내부 여백 가능 (padding)
               - 좌우 외부 여백 가능 (margin)

     ㄴ inline-block - inline 과 block 을 절충
                     - 줄 개행 x
                     - 너비, 높이 변경 가능
     
     ㄴ none - 감춤 처리

     ㄴ table - 테이블 행
        table-cell - 테이블 열

  8. 레이아웃
    내용 영역 기준 
    ㄴ content-box - 내용 영역의 사이즈를 유지 하면서 확대
                   - 총 사이즈 = 내용 용역 + 내부 여백 + 경계
    
    경계 영역 기준
    ㄴ border-box - 경계를 기준으로 사이즈를 정하는 방식
                  - 경계 + 내부여백에 따라서 내용 영역의 사이즈가 변경된다.

  9. 여백
    ㄴ 1. 내부여백 (Padding)
       ex) padding: 10px; -> 상, 오른쪽, 아래, 왼쪽 (모든방향) 10px 

           padding: 10px 20px; -> 10px = 상,하
                                  20px = 좌,우 

           padding: 10px 20px 30px; -> 10px = 위 
                                       20px = 좌,우
                                       30px = 아래
          
           padding: 10px 20px 30px 40px; -> 10px = 위
                                            20px = 오른쪽
                                            30px = 아래쪽
                                            40px = 왼쪽
           
           padding-top  
           padding-bottom
           padding-left
           padding-right

    ㄴ 2. 외부여백 (Margin)
         Padding 과 적용 순서 동일
           margin-top
           margin-bottom
           margin-left
           margin-right

  10. 경계
    border - 경계
    border: 라인 굵기(px) 경계선 종류 색상;
    경계선 종류 - solid (직선)
                - dotted (점선)
                - dashed --------
    border-radius - 경계를 둥글게 (px,%)
                  - ex) 50% = 원
    
  11. 포지션
    position - static - 기본

               relative - 상대위치
                        - 기준 -> 자신
                        - 자기 자신이 위치한 위치기준으로 상대적으로 이동

               absolute - 기준 -> 상대위치 지정한 부모 또는 조상
                        - 부모, 조상 누구라도 상대 위치 속성을 가진다면 (relative, absolute, fixed)
                        - 상대 속성을 가지고 있는 부모가 없다면 전체 문서 기준 

               fixed - 기준 -> 물리적으로 보이는 화면 기준으로 상대적으로 이동
                     - 상대위치는 상대적으로 이동하기 위한 것으로 추가속성이 존재함.
                       ㄴ top - 위 -> 아래
                          right - 오른쪽 -> 왼쪽 
                          bottom - 아래 -> 위
                          left - 왼쪽 -> 오른쪽
                          z-index - 각 요소의 층위 (숫자가 클수록 층위가 앞에있고 작아질수록 뒤에있음.)
                          ㄴ ex) z-index: 10;, z index: 9; (10이 9보다는 앞에 있다.)
    12. 배치
      float - 떠있는 속성 , 속성이 없더라도 다음 요소에 영향을 미친다.
      float-left - 왼쪽 -> 오른쪽
      float-right - 오른쪽  -> 왼쪽

      clear - 공간 속성을 가진 요소에서 적용 가능
            - left -> float: left 속성 제거
            - right -> float: right 속성 제거 
            - both -> float: left , float: right 모두 제거
      
      가상클래스 선택자 - after
      ㄴ wrap:after {
          clear: left
          content: "";
          display: block;
         }

         width 넓이 계산
         width: calc(100% 연산기호 n); 
      
    13. 그래픽 
      background-color: 배경색
      
      background-image:url(""); -> 백그라운드 이미지 삽입
      
      background-repeat: no-repeat -> 반복 없이 한번만 출력
                         repeat-x -> 왼쪽에서 오른쪽으로 반복 출력 
                         repeat-y -> 위에서 아래로 반복 출력
      
      background-position: 배경 이미지의 위치
                         : 좌중우(left/center/right) 상중하(top/center/bottom)
                         : (n)px (n)px; [좌에서 우 , 위에서 아래]
      
      background: 색상 이미지 반복 위치;
                (색상, 이미지는 둘 다 나와도 되고, 둘중에 하나만 있어도 된다.)


                  